{
  "address": "0xF49Cc2E05506CcC27fc152eB76A54b4DD25CC83D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheapWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7a96d8b47f7215684c49d6bcbd44b783ef6fb12167c624739ad19f1ca13ba636",
  "receipt": {
    "to": null,
    "from": "0xEdD2b9aDB367818BfCdc25002E3f0cb93D9cAF5F",
    "contractAddress": "0xF49Cc2E05506CcC27fc152eB76A54b4DD25CC83D",
    "transactionIndex": 40,
    "gasUsed": "1048789",
    "logsBloom": "0x
    "blockHash": "0x57657030e8f9c7d0b5d9c315797ff86883f1bf57263b29cd20df2c63d005f39a",
    "transactionHash": "0x7a96d8b47f7215684c49d6bcbd44b783ef6fb12167c624739ad19f1ca13ba636",
    "logs": [],
    "blockNumber": 8349011,
    "cumulativeGasUsed": "5946021",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x44390589104C9164407A0E0562a9DBe6C24A0E05"
  ],
  "numDeployments": 2,
  "solcInputHash": "12758332f29903b0256439f48a7caac6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheapWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\n// @title A contract for crowd funding\\n// @author Aditya Agrawal\\n// @notice This contract is to demo a sample funding contract\\n// @dev This implements price feeds as our library\\n\\n\\ncontract FundMe {\\n    // Type declarations \\n    using PriceConverter for uint256;\\n\\n    // State variables \\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n\\n    // @notice This function funds this contract\\n    // @dev Something for the devs\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    function withdraw() public payable onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\nfunction cheapWithdraw() public payable onlyOwner{ \\n    address[] memory funders = s_funders;\\n    for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n}\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0x3f5d02bffc2218c7a338701cc9d644a6324d6fef255c8e3fafe8296433214659\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xe8f218744ae7a6afcdcf5e0a06074a5ae8b3656271ddfcb469f91cc6b864aa41\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200129d3803806200129d83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611131806200016c6000396000f3fe60806040526004361061007f5760003560e01c806354861af71161004e57806354861af7146101145780636b69a59214610151578063b60d42881461017c578063dba6335f146101865761008e565b80630ec3b027146100985780631bf6132d146100c3578063206ddccd146101005780633ccfd60b1461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102eb565b6040516100ba9190610a85565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ae3565b610311565b6040516100f79190610b29565b60405180910390f35b610108610329565b005b6101126105cf565b005b34801561012057600080fd5b5061013b60048036038101906101369190610b70565b610811565b6040516101489190610bac565b60405180910390f35b34801561015d57600080fd5b50610166610850565b6040516101739190610b29565b60405180910390f35b6101846101b1565b005b34801561019257600080fd5b5061019b61085d565b6040516101a89190610bac565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088390919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c24565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610c73565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b0576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561043457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103ea575b5050505050905060005b81518110156104be57600082828151811061045c5761045b610cc9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b690610cf8565b91505061043e565b50600067ffffffffffffffff8111156104da576104d9610d41565b5b6040519080825280602002602001820160405280156105085781602001602082028036833780820191505090505b506001908051906020019061051e92919061095f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054590610da1565b60006040518083038185875af1925050503d8060008114610582576040519150601f19603f3d011682016040523d82523d6000602084013e610587565b606091505b50509050806105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290610e02565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610656576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156107015760006001828154811061067c5761067b610cc9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106f990610cf8565b915050610659565b50600067ffffffffffffffff81111561071d5761071c610d41565b5b60405190808252806020026020018201604052801561074b5781602001602082028036833780820191505090505b506001908051906020019061076192919061095f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161078890610da1565b60006040518083038185875af1925050503d80600081146107c5576040519150601f19603f3d011682016040523d82523d6000602084013e6107ca565b606091505b505090508061080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590610e02565b60405180910390fd5b50565b6001818154811061082157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061088f836108bf565b90506000670de0b6b3a764000085836108a89190610e22565b6108b29190610eab565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090857600080fd5b505afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190610f69565b5050509150506402540be400816109579190610fe4565b915050919050565b8280548282559060005260206000209081019282156109d8579160200282015b828111156109d75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061097f565b5b5090506109e591906109e9565b5090565b5b80821115610a025760008160009055506001016109ea565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a4b610a46610a4184610a06565b610a26565b610a06565b9050919050565b6000610a5d82610a30565b9050919050565b6000610a6f82610a52565b9050919050565b610a7f81610a64565b82525050565b6000602082019050610a9a6000830184610a76565b92915050565b600080fd5b6000610ab082610a06565b9050919050565b610ac081610aa5565b8114610acb57600080fd5b50565b600081359050610add81610ab7565b92915050565b600060208284031215610af957610af8610aa0565b5b6000610b0784828501610ace565b91505092915050565b6000819050919050565b610b2381610b10565b82525050565b6000602082019050610b3e6000830184610b1a565b92915050565b610b4d81610b10565b8114610b5857600080fd5b50565b600081359050610b6a81610b44565b92915050565b600060208284031215610b8657610b85610aa0565b5b6000610b9484828501610b5b565b91505092915050565b610ba681610aa5565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c0e601b83610bc7565b9150610c1982610bd8565b602082019050919050565b60006020820190508181036000830152610c3d81610c01565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7e82610b10565b9150610c8983610b10565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cbe57610cbd610c44565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d0382610b10565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d3657610d35610c44565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d8b600083610d70565b9150610d9682610d7b565b600082019050919050565b6000610dac82610d7e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dec600b83610bc7565b9150610df782610db6565b602082019050919050565b60006020820190508181036000830152610e1b81610ddf565b9050919050565b6000610e2d82610b10565b9150610e3883610b10565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7157610e70610c44565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb682610b10565b9150610ec183610b10565b925082610ed157610ed0610e7c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610efb81610edc565b8114610f0657600080fd5b50565b600081519050610f1881610ef2565b92915050565b6000819050919050565b610f3181610f1e565b8114610f3c57600080fd5b50565b600081519050610f4e81610f28565b92915050565b600081519050610f6381610b44565b92915050565b600080600080600060a08688031215610f8557610f84610aa0565b5b6000610f9388828901610f09565b9550506020610fa488828901610f3f565b9450506040610fb588828901610f54565b9350506060610fc688828901610f54565b9250506080610fd788828901610f09565b9150509295509295909350565b6000610fef82610f1e565b9150610ffa83610f1e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561103957611038610c44565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561107657611075610c44565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110b3576110b2610c44565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110f0576110ef610c44565b5b82820290509291505056fea2646970667358221220e8c681ae40d13f7ca6e8a1f4ca659a9ef2164d53cb0cf72ff608eb078e3125d264736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c806354861af71161004e57806354861af7146101145780636b69a59214610151578063b60d42881461017c578063dba6335f146101865761008e565b80630ec3b027146100985780631bf6132d146100c3578063206ddccd146101005780633ccfd60b1461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102eb565b6040516100ba9190610a85565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ae3565b610311565b6040516100f79190610b29565b60405180910390f35b610108610329565b005b6101126105cf565b005b34801561012057600080fd5b5061013b60048036038101906101369190610b70565b610811565b6040516101489190610bac565b60405180910390f35b34801561015d57600080fd5b50610166610850565b6040516101739190610b29565b60405180910390f35b6101846101b1565b005b34801561019257600080fd5b5061019b61085d565b6040516101a89190610bac565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088390919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c24565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610c73565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b0576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561043457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103ea575b5050505050905060005b81518110156104be57600082828151811061045c5761045b610cc9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b690610cf8565b91505061043e565b50600067ffffffffffffffff8111156104da576104d9610d41565b5b6040519080825280602002602001820160405280156105085781602001602082028036833780820191505090505b506001908051906020019061051e92919061095f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054590610da1565b60006040518083038185875af1925050503d8060008114610582576040519150601f19603f3d011682016040523d82523d6000602084013e610587565b606091505b50509050806105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290610e02565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610656576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156107015760006001828154811061067c5761067b610cc9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106f990610cf8565b915050610659565b50600067ffffffffffffffff81111561071d5761071c610d41565b5b60405190808252806020026020018201604052801561074b5781602001602082028036833780820191505090505b506001908051906020019061076192919061095f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161078890610da1565b60006040518083038185875af1925050503d80600081146107c5576040519150601f19603f3d011682016040523d82523d6000602084013e6107ca565b606091505b505090508061080e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080590610e02565b60405180910390fd5b50565b6001818154811061082157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061088f836108bf565b90506000670de0b6b3a764000085836108a89190610e22565b6108b29190610eab565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090857600080fd5b505afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190610f69565b5050509150506402540be400816109579190610fe4565b915050919050565b8280548282559060005260206000209081019282156109d8579160200282015b828111156109d75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061097f565b5b5090506109e591906109e9565b5090565b5b80821115610a025760008160009055506001016109ea565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a4b610a46610a4184610a06565b610a26565b610a06565b9050919050565b6000610a5d82610a30565b9050919050565b6000610a6f82610a52565b9050919050565b610a7f81610a64565b82525050565b6000602082019050610a9a6000830184610a76565b92915050565b600080fd5b6000610ab082610a06565b9050919050565b610ac081610aa5565b8114610acb57600080fd5b50565b600081359050610add81610ab7565b92915050565b600060208284031215610af957610af8610aa0565b5b6000610b0784828501610ace565b91505092915050565b6000819050919050565b610b2381610b10565b82525050565b6000602082019050610b3e6000830184610b1a565b92915050565b610b4d81610b10565b8114610b5857600080fd5b50565b600081359050610b6a81610b44565b92915050565b600060208284031215610b8657610b85610aa0565b5b6000610b9484828501610b5b565b91505092915050565b610ba681610aa5565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c0e601b83610bc7565b9150610c1982610bd8565b602082019050919050565b60006020820190508181036000830152610c3d81610c01565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7e82610b10565b9150610c8983610b10565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cbe57610cbd610c44565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d0382610b10565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d3657610d35610c44565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d8b600083610d70565b9150610d9682610d7b565b600082019050919050565b6000610dac82610d7e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dec600b83610bc7565b9150610df782610db6565b602082019050919050565b60006020820190508181036000830152610e1b81610ddf565b9050919050565b6000610e2d82610b10565b9150610e3883610b10565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7157610e70610c44565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb682610b10565b9150610ec183610b10565b925082610ed157610ed0610e7c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610efb81610edc565b8114610f0657600080fd5b50565b600081519050610f1881610ef2565b92915050565b6000819050919050565b610f3181610f1e565b8114610f3c57600080fd5b50565b600081519050610f4e81610f28565b92915050565b600081519050610f6381610b44565b92915050565b600080600080600060a08688031215610f8557610f84610aa0565b5b6000610f9388828901610f09565b9550506020610fa488828901610f3f565b9450506040610fb588828901610f54565b9350506060610fc688828901610f54565b9250506080610fd788828901610f09565b9150509295509295909350565b6000610fef82610f1e565b9150610ffa83610f1e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561103957611038610c44565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561107657611075610c44565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110b3576110b2610c44565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110f0576110ef610c44565b5b82820290509291505056fea2646970667358221220e8c681ae40d13f7ca6e8a1f4ca659a9ef2164d53cb0cf72ff608eb078e3125d264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}